tao=0.025
alpha =0.3
psi=1/.169
gamma_pi=.469
gamma_w=.7111
lambda_w=.5
zeta_ps=.908
zeta_ws=0.737
sigma_L=2.4
sigma_c=1.353
h=0.573
phi=1.408
phi_uppercase=1/6.771
rbar_k=(1/Beta)-1+tao
ky=8.8
sigma_eta_C<- 0.336
Invy=22
Cy=0.6
Ky=Invy/tao
gy=1-Cy-Invy
r_pi_g=0.14
r_y=0.099
Ry_delta=0.159
rho=0.961
r_pi=1.684
rho_el=0.889
rho_ea=0.823
rho_eb=0.855
rho_G=0.949
rho_pi=0.924
rh_i=0.927
rho_er=0
r_k_star <- (1 / Beta) - 1 + tao
rho_lamdaw=0
rho_q=0
rho_lamda_p=0
rho_L <-   0.9
sigma_e_L=3.52
sigma_e_a=.598
sigma_e_b=.336
sigma_G=.325
sigma_pi_bar=.017
sigma_er=0.081
sigma_ei=0.085
sigma_lamada_p=.16
sigma_lamda_w=.289
sigma_e_q=.604
sigma_e_i <- 3.52
sigma_e_c<- 0.336
alpha_k <- 0.3
sigma_e_p <- 0.16 # Standard deviation for price markup shocks
sigma_e_w <- 0.289 # Standard deviation for wage markup shocks
sigma_e_q <- 0.604 # Standard deviation for equity price markup shocks
stable <- TRUE
coef_range <- seq(0.70, 0.99, by = 0.01)  # Range of coefficients to test
iterations <- 104  # Number of time periods
threshold <- 5  # Stability threshold
# Loop through possible coefficient values
for (c_coef in coef_range) {
for (i_coef in coef_range) {
for (q_coef in coef_range) {
for (w_coef in coef_range) {
for (pi_coef in coef_range) {
for (r_coef in coef_range) {
# Initialize with original data
my_data <- data.frame(
time = 1:iterations,
consumption_growth_vector = rep(0, iterations),
investment_growth_vector = rep(0, iterations),
q = rep(0, iterations),
wage_growth_vector = rep(0, iterations),
inflation_vector = rep(1, iterations),
ffr_vector = rep(0, iterations),
kapital = rep(0, iterations),
output_growth_vector = rep(0, iterations),
potential_gdp = rep(1, iterations),  # Assuming an initial positive value for potential GDP
inflationtaget = rep(2, iterations),  # Assuming a constant inflation target, adjust as necessary
epsilon_C = rep(1, iterations),
epsilon_Q = rep(1, iterations),
epsilon_I = rep(1, iterations),
epsilon_L = rep(1, iterations),
epsilon_W = rep(1, iterations),
epsilon_Pi = rep(1, iterations),
epsilon_pitwo = rep(1, iterations),
expected_C_hat_next = rep(0, iterations),
expected_I_hat_next = rep(0, iterations),
expected_Q_hat_next = rep(0, iterations),
expected_W_hat_next = rep(0, iterations),
expected_Pi_hat_next = rep(0, iterations),
expected_R_hat_next = rep(0, iterations)
)
# Run the simulation
for (i in 2:iterations) {
# Generate shocks and persistence parameters
eta_c <- rnorm(1, mean = 0, sd = sigma_eta_C)
rho_c <- rbeta(1, alpha_beta, beta_beta)
my_data$epsilon_C[i] <- rho_c * my_data$epsilon_C[i-1] + eta_c
epsilon_Q <- rnorm(1, mean = 0, sd = sigma_e_q)
my_data$epsilon_Q[i] <- epsilon_Q
eta_I <- rnorm(1, mean = 0, sd = sigma_e_i)
rho_q <- rbeta(1, alpha_beta, beta_beta)
my_data$epsilon_I[i] <- rho_q * my_data$epsilon_I[i-1] + eta_I
eta_L <- rnorm(1, mean = 0, sd = sigma_e_L)
rho_L <- rbeta(1, alpha_beta, beta_beta)
my_data$epsilon_L[i] <- rho_L * my_data$epsilon_L[i-1] + eta_L
epsilon_W <- rnorm(1, mean = 0, sd = sigma_e_w)
my_data$epsilon_W[i] <- epsilon_W
epsilon_p <- rnorm(1, mean = 0, sd = sigma_e_p)
my_data$epsilon_Pi[i] <- epsilon_p
rho_pi <- rbeta(1, alpha_beta, beta_beta)
eta_pitwo <- rnorm(1, mean = 0, sd = sigma_pi_bar)
my_data$epsilon_pitwo[i] <- rho_pi * my_data$epsilon_pitwo[i-1] + eta_pitwo
eta_g <- rnorm(1, mean = 0, sd = sigma_e_q)
rho_g <- rbeta(1, alpha_beta, beta_beta)
my_data$epsilon_pitwo[i] <- rho_g * my_data$epsilon_pitwo[i-1] + eta_g
# Update the variables based on the equations
my_data$ffr_vector[i] <- my_data$inflation_vector[i-1] +
(0.5 * (my_data$output_growth_vector[i-1] - my_data$potential_gdp[i-1]) / my_data$potential_gdp[i-1]) +
(0.5 * (my_data$inflation_vector[i-1] - my_data$inflationtaget[i-1])) +
my_data$inflationtaget[i]
part1 <- (h / (1 + h)) * my_data$consumption_growth_vector[i-1]
part2 <- (1 / (1 + h)) * my_data$epsilon_C[i]
part3 <- ((sigma_c - 1) / (sigma_c * (1 + lambda_w) * (1 + h))) * (my_data$kapital[i] - my_data$epsilon_L[i])
part4 <- -((1 - h) / ((1 + h)) * sigma_c) * (my_data$ffr_vector[i] - my_data$epsilon_Pi[i])
part5 <- ((1 - h) / ((1 + h) * sigma_c))
my_data$consumption_growth_vector[i] <- part1 + part2 + part3 + part4 + part5
my_data$q[i] <- -(my_data$ffr_vector[i] - my_data$inflation_vector[i]) +
((1 - tao) / (1 - tao + my_data$ffr_vector[i])) * my_data$q[i-1] +
(r_k_star[i] / (1 - tao + my_data$ffr_vector[i])) * my_data$ffr_vector[i-1]
my_data$investment_growth_vector[i] <- (1 / (1 + Beta)) * my_data$investment_growth_vector[i-1] +
(Beta / (1 + Beta)) * my_data$epsilon_I[i] +
((1 / phi_uppercase) / (1 + Beta)) * my_data$q[i]
my_data$kapital[i] <- (1 - tao) * my_data$kapital[i-1] + tao * my_data$investment_growth_vector[i]
my_data$hours_vector[i] <- -my_data$wage_growth_vector[i] + (1 + psi) * my_data$ffr_vector[i] + my_data$kapital[i-1]
my_data$output_growth_vector[i] <- (1 - (tao * Ky) - gy) * my_data$consumption_growth_vector[i] +
(tao * Ky) * my_data$investment_growth_vector[i] + gy
parta <- (Beta / (1 + Beta * gamma_pi)) * (my_data$epsilon_Pi[i] - my_data$inflationtaget[i])
partb <- (gamma_pi / (1 + Beta * gamma_pi)) * (my_data$inflation_vector[i-1] - my_data$inflationtaget[i])
partc <- (1 / (1 - Beta * gamma_pi)) * (((1 - Beta * zeta_ps) * (1 - zeta_ps)) / zeta_ps) *
(my_data$ffr_vector[i] + ((1 - alpha) * my_data$wage_growth_vector[i]) - (1 - alpha) * gamma_w)
my_data$inflation_vector[i] <- parta + partb + partc + my_data$inflationtaget[i]
part1w <- (Beta / (1 + Beta)) * my_data$epsilon_W[i]
part2w <- (1 / (1 + Beta)) * my_data$wage_growth_vector[i-1]
part3w <- (Beta / (1 + Beta)) * (my_data$inflationtaget[i-1] - my_data$inflation_vector[i])
part4w <- ((1 + (Beta * gamma_w)) / (1 + Beta)) * (my_data$inflationtaget[i-1] - my_data$inflation_vector[i])
part5w <- (gamma_w / (1 + Beta)) * (my_data$inflationtaget[i-1] - my_data$inflation_vector[i])
adjustment_factor <- (1 / (1 + Beta)) * ((1 - (Beta * zeta_ws) * (1 - zeta_ws)) /
(1 + ((1 - lambda_w) * sigma_L) / lambda_w) * zeta_ws)
complex_part <- adjustment_factor * (my_data$wage_growth_vector[i-1] -
(sigma_L * my_data$hours_vector[i]) -
(1 / (1 - h)) * (my_data$consumption_growth_vector[i] - (h * my_data$consumption_growth_vector[i-1])))
my_data$wage_growth_vector[i] <- part1w + part2w + part3w - part4w + part5w - complex_part
}
# Check if the system remains stable (e.g., values not diverging beyond threshold)
if (max(abs(my_data$consumption_growth_vector)) > threshold || max(abs(my_data$investment_growth_vector)) > threshold ||
max(abs(my_data$q)) > threshold || max(abs(my_data$wage_growth_vector)) > threshold ||
max(abs(my_data$inflation_vector)) > threshold || max(abs(my_data$ffr_vector)) > threshold) {
stable <- FALSE
} else {
stable <- TRUE
break
}
}
if (stable) break
}
if (stable) break
}
if (stable) break
}
if (stable) break
}
if (stable) break
}
stable <- TRUE
coef_range <- seq(0.70, 0.99, by = 0.01)  # Range of coefficients to test
iterations <- 104  # Number of time periods
threshold <- 5  # Stability threshold
# Loop through possible coefficient values
for (c_coef in coef_range) {
for (i_coef in coef_range) {
for (q_coef in coef_range) {
for (w_coef in coef_range) {
for (pi_coef in coef_range) {
for (r_coef in coef_range) {
# Initialize with original data
my_data <- data.frame(
time = 1:iterations,
consumption_growth_vector = rep(0, iterations),
investment_growth_vector = rep(0, iterations),
q = rep(0, iterations),
wage_growth_vector = rep(0, iterations),
inflation_vector = rep(1, iterations),
ffr_vector = rep(0, iterations),
kapital = rep(0, iterations),
output_growth_vector = rep(0, iterations),
potential_gdp = rep(1, iterations),  # Correct initialization here
inflationtaget = rep(2, iterations),  # Correct initialization here
epsilon_Q = rep(1, iterations),
epsilon_I = rep(1, iterations),
epsilon_L = rep(1, iterations),
epsilon_W = rep(1, iterations),
epsilon_Pi = rep(1, iterations),
epsilon_pitwo = rep(1, iterations)
)
# Run the simulation
for (i in 2:iterations) {
# Generate shocks and persistence parameters
eta_c <- rnorm(1, mean = 0, sd = sigma_eta_C)
rho_c <- rbeta(1, alpha_beta, beta_beta)
my_data$epsilon_C[i] <- rho_c * my_data$epsilon_C[i-1] + eta_c
epsilon_Q <- rnorm(1, mean = 0, sd = sigma_e_q)
my_data$epsilon_Q[i] <- epsilon_Q
eta_I <- rnorm(1, mean = 0, sd = sigma_e_i)
rho_q <- rbeta(1, alpha_beta, beta_beta)
my_data$epsilon_I[i] <- rho_q * my_data$epsilon_I[i-1] + eta_I
eta_L <- rnorm(1, mean = 0, sd = sigma_e_L)
rho_L <- rbeta(1, alpha_beta, beta_beta)
my_data$epsilon_L[i] <- rho_L * my_data$epsilon_L[i-1] + eta_L
epsilon_W <- rnorm(1, mean = 0, sd = sigma_e_w)
my_data$epsilon_W[i] <- epsilon_W
epsilon_p <- rnorm(1, mean = 0, sd = sigma_e_p)
my_data$epsilon_Pi[i] <- epsilon_p
rho_pi <- rbeta(1, alpha_beta, beta_beta)
eta_pitwo <- rnorm(1, mean = 0, sd = sigma_pi_bar)
my_data$epsilon_pitwo[i] <- rho_pi * my_data$epsilon_pitwo[i-1] + eta_pitwo
eta_g <- rnorm(1, mean = 0, sd = sigma_e_q)
rho_g <- rbeta(1, alpha_beta, beta_beta)
my_data$epsilon_pitwo[i] <- rho_g * my_data$epsilon_pitwo[i-1] + eta_g
# Update the variables based on the equations
my_data$ffr_vector[i] <- my_data$inflation_vector[i-1] +
(0.5 * (my_data$output_growth_vector[i-1] - potential_gdp[i-1]) / potential_gdp[i-1]) +
(0.5 * (my_data$inflation_vector[i-1] - inflationtaget[i-1])) +
inflationtaget[i]
part1 <- (h / (1 + h)) * my_data$consumption_growth_vector[i-1]
part2 <- (1 / (1 + h)) * my_data$epsilon_C[i]
part3 <- ((sigma_c - 1) / (sigma_c * (1 + lambda_w) * (1 + h))) * (my_data$kapital[i] - my_data$epsilon_L[i])
part4 <- -((1 - h) / ((1 + h)) * sigma_c) * (my_data$ffr_vector[i] - my_data$epsilon_Pi[i])
part5 <- ((1 - h) / ((1 + h) * sigma_c))
my_data$consumption_growth_vector[i] <- part1 + part2 + part3 + part4 + part5
my_data$q[i] <- -(my_data$ffr_vector[i] - my_data$inflation_vector[i]) +
((1 - tao) / (1 - tao + my_data$ffr_vector[i])) * my_data$q[i-1] +
(r_k_star[i] / (1 - tao + my_data$ffr_vector[i])) * my_data$ffr_vector[i-1]
my_data$investment_growth_vector[i] <- (1 / (1 + Beta)) * my_data$investment_growth_vector[i-1] +
(Beta / (1 + Beta)) * my_data$epsilon_I[i] +
((1 / phi_uppercase) / (1 + Beta)) * my_data$q[i]
my_data$kapital[i] <- (1 - tao) * my_data$kapital[i-1] + tao * my_data$investment_growth_vector[i]
my_data$hours_vector[i] <- -my_data$wage_growth_vector[i] + (1 + psi) * my_data$ffr_vector[i] + my_data$kapital[i-1]
my_data$output_growth_vector[i] <- (1 - (tao * Ky) - gy) * my_data$consumption_growth_vector[i] +
(tao * Ky) * my_data$investment_growth_vector[i] + gy
parta <- (Beta / (1 + Beta * gamma_pi)) * (my_data$epsilon_Pi[i] - inflationtaget[i])
partb <- (gamma_pi / (1 + Beta * gamma_pi)) * (my_data$inflation_vector[i-1] - inflationtaget[i])
partc <- (1 / (1 - Beta * gamma_pi)) * (((1 - Beta * zeta_ps) * (1 - zeta_ps)) / zeta_ps) *
(my_data$ffr_vector[i] + ((1 - alpha) * my_data$wage_growth_vector[i]) - (1 - alpha) * gamma_w)
my_data$inflation_vector[i] <- parta + partb + partc + inflationtaget[i]
part1w <- (Beta / (1 + Beta)) * my_data$epsilon_W[i]
part2w <- (1 / (1 + Beta)) * my_data$wage_growth_vector[i-1]
part3w <- (Beta / (1 + Beta)) * (inflationtaget[i-1] - my_data$inflation_vector[i])
part4w <- ((1 + (Beta * gamma_w)) / (1 + Beta)) * (inflationtaget[i-1] - my_data$inflation_vector[i])
part5w <- (gamma_w / (1 + Beta)) * (inflationtaget[i-1] - my_data$inflation_vector[i])
adjustment_factor <- (1 / (1 + Beta)) * ((1 - (Beta * zeta_ws) * (1 - zeta_ws)) /
(1 + ((1 - lambda_w) * sigma_L) / lambda_w) * zeta_ws)
complex_part <- adjustment_factor * (my_data$wage_growth_vector[i-1] -
(sigma_L * my_data$hours_vector[i]) -
(1 / (1 - h)) * (my_data$consumption_growth_vector[i] - (h * my_data$consumption_growth_vector[i-1])))
my_data$wage_growth_vector[i] <- part1w + part2w + part3w - part4w + part5w - complex_part
}
# Check if the system remains stable (e.g., values not diverging beyond threshold)
if (max(abs(my_data$consumption_growth_vector)) > threshold || max(abs(my_data$investment_growth_vector)) > threshold ||
max(abs(my_data$q)) > threshold || max(abs(my_data$wage_growth_vector)) > threshold ||
max(abs(my_data$inflation_vector)) > threshold || max(abs(my_data$ffr_vector)) > threshold) {
stable <- FALSE
} else {
stable <- TRUE
break
}
}
if (stable) break
}
if (stable) break
}
if (stable) break
}
if (stable) break
}
if (stable) break
}
stable <- TRUE
coef_range <- seq(0.70, 0.99, by = 0.01)  # Range of coefficients to test
iterations <- 104  # Number of time periods
threshold <- 5  # Stability threshold
# Loop through possible coefficient values
for (c_coef in coef_range) {
for (i_coef in coef_range) {
for (q_coef in coef_range) {
for (w_coef in coef_range) {
for (pi_coef in coef_range) {
for (r_coef in coef_range) {
# Initialize with original data
my_data <- data.frame(
time = 1:iterations,
consumption_growth_vector = rep(0, iterations),
investment_growth_vector = rep(0, iterations),
q = rep(0, iterations),
wage_growth_vector = rep(0, iterations),
inflation_vector = rep(1, iterations),
ffr_vector = rep(0, iterations),
kapital = rep(0, iterations),
output_growth_vector = rep(0, iterations),
potential_gdp = rep(1, iterations),  # Correct initialization here
inflationtaget = rep(2, iterations),  # Correct initialization here
epsilon_Q = rep(1, iterations),
epsilon_I = rep(1, iterations),
epsilon_L = rep(1, iterations),
epsilon_W = rep(1, iterations),
epsilon_Pi = rep(1, iterations),
epsilon_pitwo = rep(1, iterations)
)
# Run the simulation
for (i in 2:iterations) {
# Generate shocks and persistence parameters
eta_c <- rnorm(1, mean = 0, sd = sigma_eta_C)
rho_c <- rbeta(1, alpha_beta, beta_beta)
my_data$epsilon_C[i] <- rho_c * my_data$epsilon_C[i-1] + eta_c
epsilon_Q <- rnorm(1, mean = 0, sd = sigma_e_q)
my_data$epsilon_Q[i] <- epsilon_Q
eta_I <- rnorm(1, mean = 0, sd = sigma_e_i)
rho_q <- rbeta(1, alpha_beta, beta_beta)
my_data$epsilon_I[i] <- rho_q * my_data$epsilon_I[i-1] + eta_I
eta_L <- rnorm(1, mean = 0, sd = sigma_e_L)
rho_L <- rbeta(1, alpha_beta, beta_beta)
my_data$epsilon_L[i] <- rho_L * my_data$epsilon_L[i-1] + eta_L
epsilon_W <- rnorm(1, mean = 0, sd = sigma_e_w)
my_data$epsilon_W[i] <- epsilon_W
epsilon_p <- rnorm(1, mean = 0, sd = sigma_e_p)
my_data$epsilon_Pi[i] <- epsilon_p
rho_pi <- rbeta(1, alpha_beta, beta_beta)
eta_pitwo <- rnorm(1, mean = 0, sd = sigma_pi_bar)
my_data$epsilon_pitwo[i] <- rho_pi * my_data$epsilon_pitwo[i-1] + eta_pitwo
eta_g <- rnorm(1, mean = 0, sd = sigma_e_q)
rho_g <- rbeta(1, alpha_beta, beta_beta)
my_data$epsilon_pitwo[i] <- rho_g * my_data$epsilon_pitwo[i-1] + eta_g
# Update the variables based on the equations
my_data$ffr_vector[i] <- my_data$inflation_vector[i-1] +
(0.5 * (my_data$output_growth_vector[i-1] - potential_gdp[i-1]) / potential_gdp[i-1]) +
(0.5 * (my_data$inflation_vector[i-1] - inflationtaget[i-1])) +
inflationtaget[i]
part1 <- (h / (1 + h)) * my_data$consumption_growth_vector[i-1]
part2 <- (1 / (1 + h)) * my_data$epsilon_C[i]
part3 <- ((sigma_c - 1) / (sigma_c * (1 + lambda_w) * (1 + h))) * (my_data$kapital[i] - my_data$epsilon_L[i])
part4 <- -((1 - h) / ((1 + h)) * sigma_c) * (my_data$ffr_vector[i] - my_data$epsilon_Pi[i])
part5 <- ((1 - h) / ((1 + h) * sigma_c))
my_data$consumption_growth_vector[i] <- part1 + part2 + part3 + part4 + part5
my_data$q[i] <- -(my_data$ffr_vector[i] - my_data$inflation_vector[i]) +
((1 - tao) / (1 - tao + my_data$ffr_vector[i])) * my_data$q[i-1] +
(r_k_star[i] / (1 - tao + my_data$ffr_vector[i])) * my_data$ffr_vector[i-1]
my_data$investment_growth_vector[i] <- (1 / (1 + Beta)) * my_data$investment_growth_vector[i-1] +
(Beta / (1 + Beta)) * my_data$epsilon_I[i] +
((1 / phi_uppercase) / (1 + Beta)) * my_data$q[i]
my_data$kapital[i] <- (1 - tao) * my_data$kapital[i-1] + tao * my_data$investment_growth_vector[i]
my_data$hours_vector[i] <- -my_data$wage_growth_vector[i] + (1 + psi) * my_data$ffr_vector[i] + my_data$kapital[i-1]
my_data$output_growth_vector[i] <- (1 - (tao * Ky) - gy) * my_data$consumption_growth_vector[i] +
(tao * Ky) * my_data$investment_growth_vector[i] + gy
parta <- (Beta / (1 + Beta * gamma_pi)) * (my_data$epsilon_Pi[i] - inflationtaget[i])
partb <- (gamma_pi / (1 + Beta * gamma_pi)) * (my_data$inflation_vector[i-1] - inflationtaget[i])
partc <- (1 / (1 - Beta * gamma_pi)) * (((1 - Beta * zeta_ps) * (1 - zeta_ps)) / zeta_ps) *
(my_data$ffr_vector[i] + ((1 - alpha) * my_data$wage_growth_vector[i]) - (1 - alpha) * gamma_w)
my_data$inflation_vector[i] <- parta + partb + partc + inflationtaget[i]
part1w <- (Beta / (1 + Beta)) * my_data$epsilon_W[i]
part2w <- (1 / (1 + Beta)) * my_data$wage_growth_vector[i-1]
part3w <- (Beta / (1 + Beta)) * (inflationtaget[i-1] - my_data$inflation_vector[i])
part4w <- ((1 + (Beta * gamma_w)) / (1 + Beta)) * (inflationtaget[i-1] - my_data$inflation_vector[i])
part5w <- (gamma_w / (1 + Beta)) * (inflationtaget[i-1] - my_data$inflation_vector[i])
adjustment_factor <- (1 / (1 + Beta)) * ((1 - (Beta * zeta_ws) * (1 - zeta_ws)) /
(1 + ((1 - lambda_w) * sigma_L) / lambda_w) * zeta_ws)
complex_part <- adjustment_factor * (my_data$wage_growth_vector[i-1] -
(sigma_L * my_data$hours_vector[i]) -
(1 / (1 - h)) * (my_data$consumption_growth_vector[i] - (h * my_data$consumption_growth_vector[i-1])))
my_data$wage_growth_vector[i] <- part1w + part2w + part3w - part4w + part5w - complex_part
}
# Check if the system remains stable (e.g., values not diverging beyond threshold)
if (max(abs(my_data$consumption_growth_vector)) > threshold || max(abs(my_data$investment_growth_vector)) > threshold ||
max(abs(my_data$q)) > threshold || max(abs(my_data$wage_growth_vector)) > threshold ||
max(abs(my_data$inflation_vector)) > threshold || max(abs(my_data$ffr_vector)) > threshold) {
stable <- FALSE
} else {
stable <- TRUE
break
}
}
if (stable) break
}
if (stable) break
}
if (stable) break
}
if (stable) break
}
if (stable) break
}
stable <- TRUE
coef_range <- seq(0.70, 0.99, by = 0.01)  # Range of coefficients to test
iterations <- 104  # Number of time periods
threshold <- 5  # Stability threshold
# Loop through possible coefficient values
for (c_coef in coef_range) {
for (i_coef in coef_range) {
for (q_coef in coef_range) {
for (w_coef in coef_range) {
for (pi_coef in coef_range) {
for (r_coef in coef_range) {
# Initialize with original data
my_data <- data.frame(
time = 1:iterations,
consumption_growth_vector = rep(0, iterations),
investment_growth_vector = rep(0, iterations),
q = rep(0, iterations),
wage_growth_vector = rep(0, iterations),
inflation_vector = rep(1, iterations),
ffr_vector = rep(0, iterations),
kapital = rep(0, iterations),
output_growth_vector = rep(0, iterations),
potential_gdp = rep(1, iterations),  # Correct initialization here
inflationtaget = rep(2, iterations),  # Correct initialization here
epsilon_Q = rep(1, iterations),
epsilon_I = rep(1, iterations),
epsilon_L = rep(1, iterations),
epsilon_W = rep(1, iterations),
epsilon_Pi = rep(1, iterations),
epsilon_pitwo = rep(1, iterations)
)
# Run the simulation
for (i in 2:iterations) {
# Generate shocks and persistence parameters
eta_c <- rnorm(1, mean = 0, sd = sigma_eta_C)
rho_c <- rbeta(1, alpha_beta, beta_beta)
my_data$epsilon_C[i] <- rho_c * my_data$epsilon_C[i-1] + eta_c
epsilon_Q <- rnorm(1, mean = 0, sd = sigma_e_q)
my_data$epsilon_Q[i] <- epsilon_Q
eta_I <- rnorm(1, mean = 0, sd = sigma_e_i)
rho_q <- rbeta(1, alpha_beta, beta_beta)
my_data$epsilon_I[i] <- rho_q * my_data$epsilon_I[i-1] + eta_I
eta_L <- rnorm(1, mean = 0, sd = sigma_e_L)
rho_L <- rbeta(1, alpha_beta, beta_beta)
my_data$epsilon_L[i] <- rho_L * my_data$epsilon_L[i-1] + eta_L
epsilon_W <- rnorm(1, mean = 0, sd = sigma_e_w)
my_data$epsilon_W[i] <- epsilon_W
epsilon_p <- rnorm(1, mean = 0, sd = sigma_e_p)
my_data$epsilon_Pi[i] <- epsilon_p
rho_pi <- rbeta(1, alpha_beta, beta_beta)
eta_pitwo <- rnorm(1, mean = 0, sd = sigma_pi_bar)
my_data$epsilon_pitwo[i] <- rho_pi * my_data$epsilon_pitwo[i-1] + eta_pitwo
eta_g <- rnorm(1, mean = 0, sd = sigma_e_q)
rho_g <- rbeta(1, alpha_beta, beta_beta)
my_data$epsilon_pitwo[i] <- rho_g * my_data$epsilon_pitwo[i-1] + eta_g
# Update the variables based on the equations
my_data$ffr_vector[i] <- my_data$inflation_vector[i-1] +
(0.5 * (my_data$output_growth_vector[i-1] - potential_gdp[i-1]) / potential_gdp[i-1]) +
(0.5 * (my_data$inflation_vector[i-1] - inflationtaget[i-1])) +
inflationtaget[i]
part1 <- (h / (1 + h)) * my_data$consumption_growth_vector[i-1]
part2 <- (1 / (1 + h)) * my_data$epsilon_C[i]
part3 <- ((sigma_c - 1) / (sigma_c * (1 + lambda_w) * (1 + h))) * (my_data$kapital[i] - my_data$epsilon_L[i])
part4 <- -((1 - h) / ((1 + h)) * sigma_c) * (my_data$ffr_vector[i] - my_data$epsilon_Pi[i])
part5 <- ((1 - h) / ((1 + h) * sigma_c))
my_data$consumption_growth_vector[i] <- part1 + part2 + part3 + part4 + part5
my_data$q[i] <- -(my_data$ffr_vector[i] - my_data$inflation_vector[i]) +
((1 - tao) / (1 - tao + my_data$ffr_vector[i])) * my_data$q[i-1] +
(r_k_star[i] / (1 - tao + my_data$ffr_vector[i])) * my_data$ffr_vector[i-1]
my_data$investment_growth_vector[i] <- (1 / (1 + Beta)) * my_data$investment_growth_vector[i-1] +
(Beta / (1 + Beta)) * my_data$epsilon_I[i] +
((1 / phi_uppercase) / (1 + Beta)) * my_data$q[i]
my_data$kapital[i] <- (1 - tao) * my_data$kapital[i-1] + tao * my_data$investment_growth_vector[i]
my_data$hours_vector[i] <- -my_data$wage_growth_vector[i] + (1 + psi) * my_data$ffr_vector[i] + my_data$kapital[i-1]
my_data$output_growth_vector[i] <- (1 - (tao * Ky) - gy) * my_data$consumption_growth_vector[i] +
(tao * Ky) * my_data$investment_growth_vector[i] + gy
parta <- (Beta / (1 + Beta * gamma_pi)) * (my_data$epsilon_Pi[i] - inflationtaget[i])
partb <- (gamma_pi / (1 + Beta * gamma_pi)) * (my_data$inflation_vector[i-1] - inflationtaget[i])
partc <- (1 / (1 - Beta * gamma_pi)) * (((1 - Beta * zeta_ps) * (1 - zeta_ps)) / zeta_ps) *
(my_data$ffr_vector[i] + ((1 - alpha) * my_data$wage_growth_vector[i]) - (1 - alpha) * gamma_w)
my_data$inflation_vector[i] <- parta + partb + partc + inflationtaget[i]
part1w <- (Beta / (1 + Beta)) * my_data$epsilon_W[i]
part2w <- (1 / (1 + Beta)) * my_data$wage_growth_vector[i-1]
part3w <- (Beta / (1 + Beta)) * (inflationtaget[i-1] - my_data$inflation_vector[i])
part4w <- ((1 + (Beta * gamma_w)) / (1 + Beta)) * (inflationtaget[i-1] - my_data$inflation_vector[i])
part5w <- (gamma_w / (1 + Beta)) * (inflationtaget[i-1] - my_data$inflation_vector[i])
adjustment_factor <- (1 / (1 + Beta)) * ((1 - (Beta * zeta_ws) * (1 - zeta_ws)) /
(1 + ((1 - lambda_w) * sigma_L) / lambda_w) * zeta_ws)
complex_part <- adjustment_factor * (my_data$wage_growth_vector[i-1] -
(sigma_L * my_data$hours_vector[i]) -
(1 / (1 - h)) * (my_data$consumption_growth_vector[i] - (h * my_data$consumption_growth_vector[i-1])))
my_data$wage_growth_vector[i] <- part1w + part2w + part3w - part4w + part5w - complex_part
}
# Check if the system remains stable (e.g., values not diverging beyond threshold)
if (max(abs(my_data$consumption_growth_vector)) > threshold || max(abs(my_data$investment_growth_vector)) > threshold ||
max(abs(my_data$q)) > threshold || max(abs(my_data$wage_growth_vector)) > threshold ||
max(abs(my_data$inflation_vector)) > threshold || max(abs(my_data$ffr_vector)) > threshold) {
stable <- FALSE
} else {
stable <- TRUE
break
}
}
if (stable) break
}
if (stable) break
}
if (stable) break
}
if (stable) break
}
if (stable) break
}
